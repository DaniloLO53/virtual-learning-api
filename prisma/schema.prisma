// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id              Int              @id @default(autoincrement())
  email           String           @unique
  password        String
  registrations   Registration[]
  updated_at      DateTime         @default(now())
  created_at      DateTime
  activities_done ActivitiesDone[]

  @@map("students")
}

model Teacher {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String
  courses    Course[]
  updated_at DateTime @default(now())
  created_at DateTime

  @@map("teachers")
}

model Course {
  id            Int            @id @default(autoincrement())
  title         String
  code          String         @default("XXX000")
  description   String?
  password      String?
  opened        Boolean        @default(true)
  teacher       Teacher        @relation(fields: [teacher_id], references: [id], onDelete: Cascade)
  teacher_id    Int
  registrations Registration[]
  articles      Article[]
  updated_at    DateTime       @default(now())
  created_at    DateTime
  activities    Activity[]

  @@map("courses")
}

model Section {
  id         Int      @id @default(autoincrement())
  title      String
  content    String
  article    Article  @relation(fields: [article_id], references: [id], onDelete: Cascade)
  article_id Int
  updated_at DateTime @default(now())
  created_at DateTime

  @@map("sections")
}

model Article {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  course      Course    @relation(fields: [course_id], references: [id], onDelete: Cascade)
  course_id   Int
  sections    Section[]
  updated_at  DateTime  @default(now())
  created_at  DateTime

  @@map("articles")
}

model Activity {
  id              Int              @id @default(autoincrement())
  title           String
  description     String
  deadline        DateTime?
  course          Course           @relation(fields: [course_id], references: [id], onDelete: Cascade)
  course_id       Int
  updated_at      DateTime         @default(now())
  created_at      DateTime
  activities_done ActivitiesDone[]

  @@map("activities")
}

model ActivitiesDone {
  id          Int      @id @default(autoincrement())
  activity_id Int
  activity    Activity @relation(fields: [activity_id], references: [id], onDelete: Cascade)
  student_id  Int
  student     Student  @relation(fields: [student_id], references: [id], onDelete: Cascade)
  created_at  DateTime

  @@map("activities_done")
}

model Registration {
  id         Int      @id @default(autoincrement())
  student_id Int
  student    Student  @relation(fields: [student_id], references: [id], onDelete: Cascade)
  course_id  Int
  course     Course   @relation(fields: [course_id], references: [id], onDelete: Cascade)
  updated_at DateTime @default(now())
  created_at DateTime

  @@map("registrations")
}
